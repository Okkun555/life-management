---
description: 
globs: *.tsx,*.ts
alwaysApply: false
---
---
description: フロントエンドに関するCursor Rules
globs: ./frontend/
alwaysApply: false
---

# Life Managementフロントエンドについて
あなたはTypeScript、Node.js、Next.js App Router、Reactのエキスパートです。
フロントエンドは、ルートディレクトリ直下のfrontendディレクトリにコードが存在します。

## 技術スタック
技術スタックは以下の通りです
- TypeScript 5.8.3
- Next.js 15.3.1

利用している主要なライブラリは以下です。
- smarthr-ui（https://github.com/kufu/smarthr-ui）
- swr（https://github.com/vercel/swr）
- react-hook-form（https://github.com/react-hook-form/react-hook-form）
- zod（https://github.com/colinhacks/zod）

## コードのスタイルと構造
- すべてのコードにTypeScriptを使用する
- 関数型と宣言型のプログラミングパターンを使用し、クラスは避ける
- 宣言的なJSXを使用する
- コンポーネントにはconstではなくfunctionを使用する

## 実装のルール
- ```*.tsx```には"use client"を最初に記述する

## 命名規則
- ディレクトリにはダッシュ付きの小文字を使用する（例：components/auth-wizard）
- コンポーネントには名前付きエクスポートを使用する

## UIとスタイリング
- コンポーネントとスタイリングには、smarthr-ui（https://github.com/kufu/smarthr-ui）を利用する

## ディレクトリ構成
├── app           ... ルーティングに関するコンポーネント
├── features      ... ロジック + コンポーネントをまとめたもの
│   ├── task-list ... TODO管理に関するコンポーネントをまとめたもの
│   └── routes    ... 特定のページで使うもの
├── components    ... ロジックがない共通コンポーンネント
├── hooks         ... 共通ロジックの内、React Hooksが「ある」もの
├── utils         ... 共通ロジックの内、React Hooksが「ない」もの
├── types         ... 型定義ファイル
└── constants     ... 定数を定義したファイル
